# shellcheck disable=all

setopt localoptions extendedglob globdots nullglob NO_caseglob NO_autonamedirs

local _server="${RCODE_REMOTE:-$(hostname -s)}" _local="$LC_HOSTNAME"
local OPTIND=1 n_flag r_flag w_flag c_flag i_flag g_flag f_flag
local _cmd _cd_target

function __rcode_process_target() {
	[[ -d $1 ]] || return

	(
		cd "$1" || {
			echo >&2 "Failed to change directory to $1"
			exit
		}

		isgit="$(git rev-parse --is-inside-work-tree 2>/dev/null)"
		if [[ $isgit != 'true' ]]; then
			isgit="$(git rev-parse --is-inside-git-dir 2>/dev/null)"
		fi

		if [[ $g_flag = 'true' && $isgit != 'true' ]]; then
			git init
		elif [[ $f_flag = 'true' && $isgit = 'true' ]]; then
			git fetch
		fi

		if [[ $i_flag != 'true' ]]; then
			return
		fi

		workspaces=(*.code-workspace)
		if [[ ${#workspaces} -eq 0 ]]; then
			cat >"$(basename "$(pwd)").code-workspace" <<EOM
{
    "folders": [
        {
            "path": ".",
        },
    ],
    "settings": {
        "files.watcherExclude": {
            "**/.git/objects/**": true,
            "**/.git/subtree-cache/**": true,
            "**/.hg/store/**": true,
            "**/node_modules/*/**": true,
            "**/.cache/**": true,
            "**/build/**": true,
            "**/site-packages/**": true,
        },
    },
}
EOM
		fi
	)
}

function __rcode_dispatch() {
	local file_dir target workspace cnt
	target="$(realpath "$1")"

	if [[ -d "$target" ]]; then
		workspace=("$target/"*.code-workspace)
		if [[ ${#workspace} -eq 1 ]]; then
			file_dir='file'
			target="$workspace[1]"
		else
			file_dir='folder'
		fi
	else
		file_dir='file'
	fi

	echo -n "--${file_dir}-uri \
'vscode-remote://ssh-remote+'$(printf '%q' "${_server}${target}")"
}

function __rcode_run_ssh() {
	local _argv=("$@") _target ssh_files

	if [[ $# -eq 1 && $1 = "-" ]]; then
		ssh_files=" -"
	else
		if [[ $# -eq 0 ]]; then
			_argv+=("$(pwd)")
		fi

		for _target in "${_argv[@]}"; do
			if [[ -z $_cd_target && -n $c_flag && -d $_target ]]; then
				_cd_target="$_target"
			fi
			__rcode_process_target "$_target"
			ssh_files+=" $(__rcode_dispatch "$_target")"
		done
	fi

	ssh -T "$_local" "code${n_flag-}${r_flag-}${w_flag-}$ssh_files"
}

while getopts 'nrwcigf' flag &>/dev/null; do
	case "$flag" in
	n) n_flag=' --new-window' ;;
	r) r_flag=' --reuse-window' ;;
	w) w_flag=' --wait' ;;
	c) c_flag=true ;;
	i) i_flag=true ;;
	g) g_flag=true ;;
	f) f_flag=true ;;
	*) break ;;
	esac
done

shift $((OPTIND - 1))
if [[ $1 = '--' ]]; then
	shift
fi

__rcode_run_ssh "$@"
if [[ -n $_cd_target ]]; then
	pushd "$_cd_target"
fi
